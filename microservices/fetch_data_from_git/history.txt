    1  sudo curl --silent --location -o /usr/local/bin/kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.5/2022-01-21/bin/linux/amd64/kubectl
    2  sudo chmod +x /usr/local/bin/kubectl
    3  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    4  unzip awscliv2.zip
    5  sudo ./aws/install
    6  sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
    7  sudo yum -y install jq gettext bash-completion moreutils
    8  echo 'yq() {
    9    docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"
   10  }' | tee -a ~/.bashrc && source ~/.bashrc
   11  for command in kubectl jq envsubst aws;   do     which $command &>/dev/null && echo "$command in path" || echo "$command NOT FOUND";   done
   12  kubectl completion bash >>  ~/.bash_completion
   13  . /etc/profile.d/bash_completion.sh
   14  . ~/.bash_completion
   15  echo 'export LBC_VERSION="v2.4.1"' >>  ~/.bash_profile
   16  echo 'export LBC_CHART_VERSION="1.4.1"' >>  ~/.bash_profile
   17  .  ~/.bash_profile
   18  aws cloud9 update-environment  --environment-id $C9_PID --managed-credentials-action DISABLE
   19  rm -vf ${HOME}/.aws/credentials
   20  export ACCOUNT_ID=$(aws sts get-caller-identity --output text --query Account)
   21  export AWS_REGION=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')
   22  export AZS=($(aws ec2 describe-availability-zones --query 'AvailabilityZones[].ZoneName' --output text --region $AWS_REGION))
   23  test -n "$AWS_REGION" && echo AWS_REGION is "$AWS_REGION" || echo AWS_REGION is not set
   24  echo "export ACCOUNT_ID=${ACCOUNT_ID}" | tee -a ~/.bash_profile
   25  echo "export AWS_REGION=${AWS_REGION}" | tee -a ~/.bash_profile
   26  echo "export AZS=(${AZS[@]})" | tee -a ~/.bash_profile
   27  aws configure set default.region ${AWS_REGION}
   28  aws configure get default.region
   29  aws sts get-caller-identity --query Arn | grep eksworkshop-admin -q && echo "IAM role valid" || echo "IAM role NOT valid"
   30  cd ~/environment
   31  git clone https://github.com/aws-containers/ecsdemo-frontend.git
   32  git clone https://github.com/aws-containers/ecsdemo-nodejs.git
   33  git clone https://github.com/aws-containers/ecsdemo-crystal.git
   34  ssh-keygen
   35  cat /home/ec2-user/.ssh/id_rsa.pub
   36  ll -a
   37  cd /home/ec2-user/.ssh/
   38  ll -a
   39  aws ec2 import-key-pair --key-name "eksworkshop" --public-key-material file://~/.ssh/id_rsa.pub --region ap-southeast-1
   40  aws ec2 import-key-pair --key-name "eksworkshop" --public-key-material file://~/.ssh/id_rsa.pub --region ap-southeast-1c
   41  aws ec2 import-key-pair --key-name "eksworkshop" --public-key-material file://~/.ssh/id_rsa.pub --region ap-southeast-1
   42  cat ~/.ssh/id_rsa.pub
   43  aws ec2 import-key-pair --key-name "eksworkshop" --public-key-material "$(cat ~/.ssh/id_rsa.pub)" --region ap-southeast-1
   44  aws ec2 import-key-pair --key-name "eksworkshop" --public-key-material "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDRn4hUGisvDGx+doojazRjv6Mo3cnqHp0aSi0jHYvajdbqkrlgi6zQD09ImOpPBCiVIltcEkkYkTDT1+m+y+KuM7Hq9BP5LUNwEhGHdn6wYHvR5SNg+r2NGV2+dnBi7He7G6MdfdMxPIW/AgNM0y4eEHW3Va0uuyWl0pvLi/j38foGmt2t6wXa5aitcdwwHe9c0eseCYaybUvvWcJGLwRycQW/CONjfCKCmzs2aWhGdjcYdgXeVbk1x4US8EaDHTQHvAZRbwFmm1uHt/gnLvio1V927edeR5A86v4dC/ek2TSPIQm5HCV7FOogOL43GP9wNcPqfcnhxxVJlG7DyNZH ec2-user@ip-172-31-33-45.ap-southeast-1.compute.internal" --region ap-southeast-1
   45  ll -a
   46  cd 
   47  cd /home/ec2-user/
   48  ll
   49  cd environment/
   50  ll
   51  ssh-keygen
   52  aws ec2 import-key-pair --key-name "eksworkshop" --public-key-material file://~/.ssh/id_rsa.pub --region ap-southeast-1
   53  cd /home/ec2-user/.ssh/
   54  ll
   55  vi authorized_keys 
   56  aws ec2 import-key-pair --key-name "eksworkshop" --public-key-material fileb://~/.ssh/id_rsa.pub --region ap-southeast-1
   57  cat ~/.ssh/id_rsa.pub
   58  aws kms create-alias --alias-name alias/eksworkshop --target-key-id $(aws kms create-key --query KeyMetadata.Arn --output text)
   59  aws kms create-alias --alias-name alias/eksworkshop1 --target-key-id $(aws kms create-key --query KeyMetadata.Arn --output text)
   60  export MASTER_ARN=$(aws kms describe-key --key-id alias/eksworkshop --query KeyMetadata.Arn --output text)
   61  export MASTER_ARN=$(aws kms describe-key --key-id alias/eksworkshop1 --query KeyMetadata.Arn --output text)
   62  echo "export MASTER_ARN=${MASTER_ARN}" | tee -a ~/.bash_profile
   63  curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
   64  sudo mv -v /tmp/eksctl /usr/local/bin
   65  eksctl version
   66  eksctl completion bash >> ~/.bash_completion
   67  . /etc/profile.d/bash_completion.sh
   68  . ~/.bash_completion
   69  aws sts get-caller-identity --query Arn | grep eksworkshop-admin -q && echo "IAM role valid" || echo "IAM role NOT valid"
   70  aws std get-callet-identity
   71  aws sts get-callet-identity
   72  aws sts get-caller-identity
   73  cd ..
   74  cd environment/
   75  cat << EOF > eksworkshop.yaml
   76  ---
   77  apiVersion: eksctl.io/v1alpha5
   78  kind: ClusterConfig
   79  metadata:
   80    name: eksworkshop-eksctl
   81    region: ${AWS_REGION}
   82    version: "1.21"
   83  availabilityZones: ["${AZS[0]}", "${AZS[1]}", "${AZS[2]}"]
   84  managedNodeGroups:
   85  - name: nodegroup
   86    desiredCapacity: 3
   87    instanceType: t3.small
   88    ssh:
   89      enableSsm: true
   90  secretsEncryption:
   91    keyARN: ${MASTER_ARN}
   92  EOF
   93  ll
   94  vi eksworkshop.yaml 
   95  eksctl create cluster -f eksworkshop.yaml
   96  vi eksworkshop.yaml 
   97  eksctl create cluster -f eksworkshop.yaml
   98  kubectl get nodes
   99  STACK_NAME=$(eksctl get nodegroup --cluster eksworkshop-eksctl -o json | jq -r '.[].StackName')
  100  ROLE_NAME=$(aws cloudformation describe-stack-resources --stack-name $STACK_NAME | jq -r '.StackResources[] | select(.ResourceType=="AWS::IAM::Role") | .PhysicalResourceId')
  101  echo "export ROLE_NAME=${ROLE_NAME}" | tee -a ~/.bash_profile
  102  export DASHBOARD_VERSION="v2.6.0"
  103  kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/${DASHBOARD_VERSION}/aio/deploy/recommended.yaml
  104  kubectl proxy --port=8080 --address=0.0.0.0 --disable-filter=true &
  105  jobs
  106  aws eks get-token --cluster-name eksworkshop-eksctl | jq -r '.status.token'
  107  aws eks get-token --cluster-name eksworkshop-eksctl | jq .
  108  aws eks get-token --cluster-name eksworkshop-eksctl | jq -r '.status.token'
  109  kubectl get all --all-namespaces
  110  kubectl proxy
  111  kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v3.0.0-alpha0/charts/kubernetes-dashboard.yaml
  112  kubectl proxy --port=8080 --address=0.0.0.0 --disable-filter=true &
  113  lsof -i :8080
  114  kill -9 8893
  115  kubectl proxy --port=8080 --address=0.0.0.0 --disable-filter=true &
  116  aws eks get-token --cluster-name eksworkshop-eksctl | jq -r '.status.token'
  117  kubectl get all --all-namespaces
  118  kubectl get nodes
  119  pkill -f 'kubectl proxy --port=8080'
  120  echo ${DASHBOARD_VERSION}
  121  ll
  122  kubectl delete -f https://raw.githubusercontent.com/kubernetes/dashboard/v3.0.0-alpha0/charts/kubernetes-dashboard.yaml
  123  export DASHBOARD_VERSION="v2.7.0"
  124  kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/${DASHBOARD_VERSION}/aio/deploy/recommended.yaml
  125  kubectl proxy --port=8080 --address=0.0.0.0 --disable-filter=true &
  126  aws eks get-token --cluster-name eksworkshop-eksctl | jq -r '.status.token'
  127  kubectl delete -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0-alpha0/charts/kubernetes-dashboard.yaml
  128  aws eks get-token --cluster-name eksworkshop-eksctl | jq -r '.status.token'
  129  kubectl delete -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0-alpha0/charts/kubernetes-dashboard.yaml
  130  kubectl proxy --port=8080 --address=0.0.0.0 --disable-filter=true &
  131  cubectl get pods
  132  kubectl get pods
  133  kubectl get namespaces
  134  kubectl config current-context
  135  kubectl config get-contexts
  136  kubectl get pods-n kube-system
  137  kubectl get pods -n kube-system
  138  systemctl status kube-apiserver
  139  kubectl get pods -n kube-public
  140  kubectl get pods -n kube-node-lease
  141  kubectl get pods -n default
  142  kubernetes-dashboard
  143  kubectl get svc
  144  $ kubectl port-forward svc/kubernetes-dashboard -n kubernetes-dashboard 6443:443
  145  kubectl delete -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0-alpha0/charts/kubernetes-dashboard.yaml
  146  pkill -f 'kubectl proxy --port=8080'
  147  kubectl delete -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0-alpha0/charts/kubernetes-dashboard.yaml
  148  export DASHBOARD_VERSION="v2.7.0"
  149  kubectl delete -f https://raw.githubusercontent.com/kubernetes/dashboard/${DASHBOARD_VERSION}/charts/kubernetes-dashboard.yaml
  150  kubectl delete -f https://raw.githubusercontent.com/kubernetes/dashboard/${DASHBOARD_VERSION}/aio/deploy/recommended.yaml
  151  export DASHBOARD_VERSION="v2.6.0"
  152  export DASHBOARD_VERSION="v2.7.0"
  153  kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/${DASHBOARD_VERSION}/aio/deploy/recommended.yaml
  154  kubectl proxy --port=8080 --address=0.0.0.0 --disable-filter=true &
  155  kubectl proxy
  156  kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep eks-admin | awk '{print $1}')
  157  aws eks get-token --cluster-name eksworkshop-eksctl | jq -r '.status.token'
  158  kubectl get pods
  159  kubectl get pod
  160  docker login -u wpdevaniyasora
  161  docker images
  162  pwd
  163  ll
  164  curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh
  165  chmod 700 get_helm.sh
  166  ./get_helm.sh
  167  helm version | cut -d + -f 1
  168  aws version
  169  aws --version
  170  kubectl --version
  171  kubectl version
  172  kubectl version --client --output=yaml
  173  cd course_work/Helm_charts/Postgres/
  174  ll
  175  vi Chart.yaml 
  176  vi values.yaml 
  177  cd templates/
  178  ll
  179  vi postgres-deploy.yaml 
  180  vi postgres-service.yaml 
  181  kubectl get all
  182  kubectl get pods
  183  cd ..
  184  ll
  185  pwd
  186  helm install Postgres .
  187  helm install postgres .
  188  kubectl get pods
  189  kubectl get all
  190  kubectl get pods
  191  psql 'postgres://ekspostgres:eks2023sem1@-13-214-37-51:30003/authdb'
  192  sudo apt-get update
  193  sudo apt-get install postgresql
  194  sudo yum install postgresql
  195  psql 'postgres://ekspostgres:eks2023sem1@-13-214-37-51:30003/authdb'
  196  psql 'postgres://ekspostgres:eks2023sem1@13-214-37-51:30003/authdb'
  197  psql 'postgres://ekspostgres:eks2023sem1@13.214.37.51:30003/authdb'
  198  cd ..
  199  pwd
  200  cd microservices/
  201  ll
  202  cd auth-service/
  203  ll
  204  cd manifest/
  205  ll
  206  vi configmap.yaml 
  207  vi deployment.yaml 
  208  vi secret.yaml 
  209  vi service.yaml 
  210  vi secret.yaml 
  211  vi deployment.yaml 
  212  cd ..
  213  vi Dockerfile 
  214  vi se
  215  vi server.py 
  216  pip install jwt
  217  pip install psycopg2
  218  sudo apt-get update
  219  sudo pip update
  220  sudo pip install libpq-dev python-dev
  221  python version
  222  python --version
  223  sudo pip install --upgrade pip
  224  sudo apt-get update
  225  openssl version
  226  pip install flask
  227  pip3 install flask
  228  pip3 install --upgrade pip
  229  sudo apt-get update
  230  which python3
  231  which pip
  232  cd ..
  233  wget https://bootstrap.pypa.io/get-pip.py | sudo python3
  234  ll
  235  pip version
  236  pip --version
  237  pip3 --version
  238  sudo yum update
  239  pip3 --version
  240  pip --version
  241  sudo yum install python3-pip
  242  pip --version
  243  pip3 --version
  244  pip --version
  245  sudo yum install python3-pip
  246  pip3 --version
  247  pip install --upgrade pip
  248  echo $PATH
  249  which pip3
  250  sudo yum install python3-pip
  251  pip list
  252  curl -O https://bootstrap.pypa.io/get-pip.py
  253  ll
  254  sudo python3 get-pip.py
  255  python -m pip --version
  256  pip list
  257  pip3 list
  258  python3
  259  yum install pip
  260  sudo yum install pip
  261  pip list
  262  pytonn3 -m pip list
  263  python3 -m pip list
  264  python3 -m pip install jwt
  265  python3 -m pip install flask
  266  python3 -m pip install libpq-dev python-dev
  267  python3 -m pip install psycopg2
  268  sudo yum install gcc python27 python27-devel postgresql-devel
  269  python3 -m pip install psycopg2
  270  pip list
  271  python3 -m pip list
  272  cd course_work/
  273  cd microservices/
  274  ll
  275  cd auth-service/
  276  ll
  277  docker login -u wpdevaniyasora
  278  docker build -t auth-service
  279  docker tag auth-service:latest wpdevaniyasora/auth-service
  280  vi Dockerfile 
  281  cd manifest/
  282  vi deployment.yaml 
  283  cd ..
  284  docker build -t auth-service
  285  ll
  286  docker tag auth-service:latest wpdevaniyasora/auth-service
  287  docker build -t auth-service .
  288  docker images
  289  docker tag auth-service:latest wpdevaniyasora/auth-service
  290  docker images
  291  docker push wpdevaniyasora/auth-service:latest
  292  cd manifest/
  293  ll
  294  kubectl apply -f .
  295  kubectl get all
  296  vi deployment.yaml 
  297  kubectl get all
  298  cd ..
  299  vi requirements.txt 
  300  vi Dockerfile 
  301  cd ..
  302  cd fetch_data_from_git/
  303  ll
  304  vi Dockerfile 
  305  vi requirements.txt 
  306  cd manifest/
  307  ll
  308  cd c
  309  vi con
  310  vi configmap.yaml 
  311  ll
  312  vi fetch_data_from_git.yaml 
  313  vi secret.yaml 
  314  vi fetch_data_from_git.yaml 
  315  vi secret.yaml 
  316  ll
  317  cd course_work/microservices/fetch_data_from_git/
  318  ll
  319  vi requirements.txt 
  320  cd manifest/
  321  vi service.yaml 
  322  ll
  323  vi secret.yaml 
  324  python
  325  cd ..
  326  cd productivity_calculate/
  327  ll
  328  pwd
  329  python
  330  python productivity_calculation.py
  331  pip install boto3
  332  python productivity_calculation.py
  333  vi createDynamoDbTable.py 
  334  python createDynamoDbTable.py 
  335  vi productivity_calculation.py 
  336  python productivity_calculation.py 
  337  vi productivity_calculation.py 
  338  cd ..
  339  cd fetch_data_from_git/
  340  python fetch_data_from_git.py 
  341  pip install requests
  342  python fetch_data_from_git.py 
  343  pip install zulu
  344  python fetch_data_from_git.py 
  345  pip install Flask requests python-dateutil zulu boto3
  346  cd course_work/microservices/fetch_data_from_git/
  347  ll
  348  python fetch_data_from_git.py 
  349  ll
  350  docker build -t wpdevaniyasora/fetch-git-data:latest .
  351  vi Dockerfile 
  352  docker build -t wpdevaniyasora/fetch-git-data:latest .
  353  docker push wpdevaniyasora/fetch-git-data:latest
  354  vi Dockerfile 
  355  docker build -t wpdevaniyasora/fetch-git-data:latest .
  356  docker push wpdevaniyasora/fetch-git-data:latest
  357  vi Dockerfile 
  358  pwd
  359  vi deployment.yaml
  360  cd manifest/
  361  ll
  362  kubectl apply -f deployment.yaml
  363  kubectl apply -f service.yaml
  364  ll
  365  kubectl get pods
  366  kubectl get svc -w
  367  vi deployment.yaml
  368  vi service.yaml 
  369  kubectl describe pod fetch-git-data-7f4b786f8-4wn9k
  370  kubectl delete pod fetch-git-data-7f4b786f8-4wn9k
  371  kubectl get pods
  372  kubectl delete pod fetch-git-data-7f4b786f8-jjdgt
  373  kubectl get pods
  374  pwd
  375  ll
  376  kubectl get pods
  377  ll
  378  vi deployment.yaml
  379  kubectl get deployments
  380  kubectl delete deployment fetch-git-data
  381  kubectl get deployments
  382  kubectl get pods
  383  vi service.yaml 
  384  cd ..
  385  ll
  386  vi Dockerfile 
  387  vi fetch_data_from_git.py 
  388  docker build -t wpdevaniyasora/fetch-git-data:latest .
  389  docker push wpdevaniyasora/fetch-git-data:latest
  390  cd manifest/
  391  ll
  392  kubectl apply -f deployment.yaml
  393  kubectl apply -f service.yaml
  394  kubectl get pods
  395  kubectl describe pod fetch-git-data-568bcf9f68-9vmrx
  396  kubectl get pods -w
  397  kubectl get pods
  398  kubectl get deployments
  399  kubectl delete deployment fetch-git-data
  400  kubectl get deployments
  401  kubectl get pods
  402  docker build -t wpdevaniyasora/fetch-git-data:latest .
  403  cd ..
  404  docker build -t wpdevaniyasora/fetch-git-data:latest .
  405  docker push wpdevaniyasora/fetch-git-data:latest
  406  cd manifest/
  407  ll
  408  kubectl apply -f deployment.yaml
  409  kubectl apply -f service.yaml
  410  cd ..
  411  kubectl logs fetch-git-data-568bcf9f68-2hl6h
  412  kubectl get pods
  413  python fetch_data_from_git.py 
  414  kubectl port-forward fetch-git-data-568bcf9f68-2hl6h 5004:5004
  415  kubectl logs fetch-git-data-568bcf9f68-2hl6h
  416  kubectl get services
  417  python fetch_data_from_git.py
  418  kubectl get svc
  419  kubectl get deployments
  420  kubectl get services
  421  kubectl get nodes -o wide
  422  eksctl get pods
  423  cd manifest/
  424  vi service.yaml 
  425  kubectl get nodes -o wide
  426  kubectl get services
  427  kubectl logs fetch-git-data-568bcf9f68-2hl6h
  428  cd ..
  429  kubectl get deployments
  430  kubectl delete deployment fetch-git-data
  431  cd manifest/
  432  kubectl apply -f deployment.yaml
  433  kubectl apply -f service.yaml
  434  kubectl get deployments
  435  kubectl get pods
  436  kubectl logs fetch-git-data-568bcf9f68-l7r97
  437  cd ..
  438  vi fetch_data_from_git.py 
  439  docker build -t wpdevaniyasora/fetch-git-data:latest .
  440  kubectl get deployments
  441  docker push wpdevaniyasora/fetch-git-data:latest
  442  kubectl delete deployment fetch-git-data
  443  cd manifest/
  444  kubectl apply -f deployment.yaml
  445  kubectl apply -f service.yaml
  446  kubectl get deployments
  447  kubectl get pods
  448  cd ..
  449  cd productivity_calculate/
  450  ll
  451  vi productivity_calculation.py 
  452  ll
  453  vi productivity_calculation.py 
  454  vi Dockerfile 
  455  docker build -t wpdevaniyasora/productivity-cal:latest
  456  docker build -t wpdevaniyasora/productivity-cal:latest .
  457  ll
  458  docker build -t wpdevaniyasora/productivity-cal:latest .
  459  docker push wpdevaniyasora/productivity-cal:latest
  460  cd manifest/
  461  ll
  462  vi deployment.yaml 
  463  vi service.yaml 
  464  kubectl apply -f deployment.yaml
  465  kubectl apply -f service.yaml
  466  cd ..
  467  vi productivity_calculation.py 
  468  kubectl get deployments
  469  kubectl delete deployment productivity-cal
  470  docker build -t wpdevaniyasora/productivity-cal:latest .
  471  docker push wpdevaniyasora/productivity-cal:latest
  472  cd manifest/
  473  ll
  474  kubectl apply -f deployment.yaml
  475  kubectl apply -f service.yaml
  476  cd ..
  477  cd display_result/
  478  ll
  479  vi displayresults.py 
  480  docker build -t wpdevaniyasora/displayresults:latest .
  481  docker push wpdevaniyasora/displayresults:latest
  482  ll
  483  vi Dockerfile 
  484  vi requirements.txt 
  485  vi displayresults.py 
  486  docker build -t wpdevaniyasora/displayresults:latest .
  487  docker push wpdevaniyasora/displayresults:latest
  488  cd manifest/
  489  kubectl apply -f deployment.yaml
  490  kubectl apply -f service.yaml
  491  kubectl get deployments
  492  kubectl get pods
  493  cd ..
  494  cd fetch_data_from_git/manifest/
  495  ll
  496  vi service.yaml 
  497  kubectl get deployments
  498  kubectl get pods
  499  kubectl get services
  500  cd course_work/microservices/test/
  501  ll
  502  python test_get_git_data.py 
  503  vi test_get_git_data.py 
  504  python test_get_git_data.py 
  505  vi test_get_git_data.py 
  506  kubectl get deployments
  507  kubectl get pods
  508  kubectl get services
  509  ll
  510  cd micorservice_2_test/
  511  ll
  512  python productivity_calculation_test.py 
  513  vi productivity_calculation_test.py 
  514  python productivity_calculation_test.py 
  515  cd ..
  516  cd micorservice_3_test/
  517  ll
  518  python displayresults_test.py 
  519  cd course_work/microservices/test_suite/
  520  ll
  521  cd micorservice_1_test/
  522  ll
  523  python test_get_git_data.py 
  524  vi test_get_git_data.py 
  525  history
  526  cd ..
  527  aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 913222011643.dkr.ecr.ap-southeast-1.amazonaws.com
  528  docker tag displayresults:latest 913222011643.dkr.ecr.ap-southeast-1.amazonaws.com/displayresults:latest
  529  cd fetch_data_from_git/
  530  ll
  531  docker tag displayresults:latest 913222011643.dkr.ecr.ap-southeast-1.amazonaws.com/displayresults:latest
  532  vi Dockerfile 
  533  history | grep docker
  534  docker build -t wpdevaniyasora/displayresults:latest .
  535  docker image build -t wpdevaniyasora/displayresults:latest .
  536  aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 913222011643.dkr.ecr.ap-southeast-1.amazonaws.com
  537  docker build -t displayresults .
  538  docker tag displayresults:latest 913222011643.dkr.ecr.ap-southeast-1.amazonaws.com/displayresults:latest
  539  docker push 913222011643.dkr.ecr.ap-southeast-1.amazonaws.com/displayresults:latest
  540  cd manifest/
  541  ll
  542  vi deployment.yaml 
  543  history | grep delete
  544  kubectl get deployments
  545  kubectl delete deployment displayresults
  546  history
  547  kubectl apply -f deployment.yaml
  548  ll
  549  vi deployment.yaml 
  550  kubectl apply -f service.yaml
  551  kubectl get pods
  552  kubectl get service
  553  kubectl get nodes -o wide
  554  kubectl get pods
  555  kubectl get deployments
  556  ll
  557  i deployment.yaml 
  558  cd ..
  559  cd display_result/
  560  cd manifest/
  561  ll
  562  cd ..
  563  ll
  564  aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 913222011643.dkr.ecr.ap-southeast-1.amazonaws.com
  565  docker build -t displayresults .
  566  docker tag displayresults:latest 913222011643.dkr.ecr.ap-southeast-1.amazonaws.com/displayresults:latest
  567  docker push 913222011643.dkr.ecr.ap-southeast-1.amazonaws.com/displayresults:latest
  568  cd manifest/
  569  ll
  570  vi deployment.yaml 
  571  kubectl get deployments
  572  kubectl delete deployment fetch-git-data
  573  kubectl delete deployment productivity-cal
  574  kubectl get deployments
  575  kubectl apply -f deployment.yaml
  576  kubectl apply -f service.yaml
  577  kubectl get deployments
  578  kubectl get pods
  579  kubectl get svc
  580  kubectl get service
  581  kubectl delete service displayresults
  582  kubectl delete service fetch-git-data
  583  kubectl delete service productivity-cal
  584  kubectl get deployments
  585  kubectl delete deployments displayresults
  586  kubectl get pod
  587  kubectl get pods
  588  ll
  589  vi deployment.yaml 
  590  cd ..
  591  kubectl get podspwd
  592  pwd
  593  aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 913222011643.dkr.ecr.ap-southeast-1.amazonaws.com
  594  docker build -t displayresults .
  595  docker tag displayresults:latest 913222011643.dkr.ecr.ap-southeast-1.amazonaws.com/displayresults:latest
  596  docker push 913222011643.dkr.ecr.ap-southeast-1.amazonaws.com/displayresults:latest
  597  ll
  598  cd manifest/
  599  ll
  600  vi deployment.yaml 
  601  vi service.yaml 
  602  history
  603  kubectl apply -f deployment.yaml
  604  kubectl get deployments
  605  kubectl apply -f service.yaml
  606  kubectl get pods
  607  kubectl get services
  608  kubectl get nodes -o wide
  609  cd ..
  610  pwd
  611  cd fetch_data_from_git/
  612  ll
  613  docker build -t fetch-git-data .
  614  docker tag fetch-git-data:latest 913222011643.dkr.ecr.ap-southeast-1.amazonaws.com/fetch-git-data:latest
  615  docker push 913222011643.dkr.ecr.ap-southeast-1.amazonaws.com/fetch-git-data:latest
  616  cd manifest/
  617  ll
  618  vi deployment.yaml 
  619  kubectl apply -f deployment.yaml
  620  kubectl apply -f service.yaml
  621  kubectl get nodes -o wide
  622  kubectl get svr
  623  kubectl get services
  624  cd ..
  625  cd productivity_calculate/
  626  ll
  627  docker build -t productivity-cal .
  628  docker tag productivity-cal:latest 913222011643.dkr.ecr.ap-southeast-1.amazonaws.com/productivity-cal:latest
  629  docker push 913222011643.dkr.ecr.ap-southeast-1.amazonaws.com/productivity-cal:latest
  630  cd ..
  631  cd productivity_calculate/manifest/
  632  ll
  633  cd course_work/microservices/fetch_data_from_git/manifest/
  634  vi deployment.yaml 
  635  kubectl apply -f deployment.yaml
  636  kubectl apply -f service.yaml
  637  kubectl get nodes -o wide
  638  kubectl get services
  639  kubectl proxy
  640  kubectl proxy --port=8080 --address=0.0.0.0 --disable-filter=true &
  641  sudo lsof -i :8080
  642  export DASHBOARD_VERSION="v2.6.0"
  643  kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/${DASHBOARD_VERSION}/aio/deploy/recommended.yaml
  644  export DASHBOARD_VERSION="v2.7.0"
  645  kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/${DASHBOARD_VERSION}/aio/deploy/recommended.yaml
  646  kubectl proxy --port=8080 --address=0.0.0.0 --disable-filter=true &
  647  /api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/
  648  aws eks get-token --cluster-name eksworkshop-eksctl | jq -r '.status.token'
  649  kubectl get services
  650  kubectl get nodes -o wide
  651  aws eks get-token --cluster-name eksworkshop-eksctl | jq -r '.status.token'
  652  kubectl get pods -o wide
  653  cd ../../test_suite/
  654  cd micorservice_1_test/
  655  vi deployment.yaml 
  656  kubectl get deployments
  657  cd ../../test_suite/
  658  cd micorservice_
  659  cd micorservice_1_test/
  660  ll
  661  python test_get_git_data.py 
  662  vi test_get_git_data.py 
  663  cd ..
  664  cd fetch_data_from_git/
  665  vi Dockerfile 
  666  cd manifest/
  667  ll
  668  vi deployment.yaml 
  669  curl -Lo aws-iam-authenticator https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.6.11/aws-iam-authenticator_0.6.11_linux_amd64
  670  ll
  671  ll -h
  672  ll -a
  673  cd aws
  674  ls
  675  cd ..
  676  ll
  677  curl -Lo aws-iam-authenticator https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.6.11/aws-iam-authenticator_0.6.11_linux_arm64
  678  ll -a
  679  curl -Lo aws-iam-authenticator.txt https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.6.11/authenticator_0.6.11_checksums.txt
  680  ll -a
  681  awk '/aws-iam-authenticator_0.6.11_linux_amd64/ {print $1}' aws-iam-authenticator.txt
  682  awk '/aws-iam-authenticator_0.6.11_linux_arm64/ {print $1}' aws-iam-authenticator.txt
  683  openssl sha1 -sha256 aws-iam-authenticator
  684  chmod +x ./aws-iam-authenticator
  685  mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$HOME/bin:$PATH
  686  echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc
  687  mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$HOME/bin:$PATH
  688  echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc
  689  aws-iam-authenticator help
  690  history
  691  pwd
  692  ls
  693  ll
  694  cd course_work/
  695  ll
  696  cd microservices/
  697  ll
  698  cd fetch_data_from_git/
  699  git clone https://git-codecommit.ap-southeast-1.amazonaws.com/v1/repos/developeriq-repository-1
  700  ll
  701  pwd
  702  ll
  703  cd developeriq-repository-1/
  704  ll
  705  ls
  706  ll
  707  cd manifest/
  708  ll
  709  vi deployment.yaml 
  710  cd ..
  711  git remote -v
  712  git status
  713  git add .
  714  git status
  715  git commit -m "fetch_data_from_git microservice has been pushed to ECR"
  716  git status
  717  git push origin master
  718  pwd
  719  cd course_work/microservices/test_suite/
  720  cd micorservice_1_test/
  721  python test_get_git_data.py 
  722  cd ../../..
  723  cd ..
  724  ll
  725  vi eksworkshop.yaml
  726  kubectl get nodes
  727  cd course_work/microservices/
  728  ll
  729  cd create_tables/
  730  ll
  731  vi createDynamoDbTable.py 
  732  kubectl get pods
  733  kubectl get services
  734  kubectl get nodes -o wide
  735  cd ../test_suite/
  736  cd micorservice_1_test/
  737  vi test_get_git_data.py 
  738  cd ../micorservice_2_test/
  739  vi productivity_calculation_test.py 
  740  python productivity_calculation_test.py 
  741  cd ../micorservice_3_test/
  742  vi displayresults_test.py 
  743  python displayresults_test.py 
  744  vi displayresults_test.py 
  745  vi fgh.py
  746  vi displayresults_test.py 
  747  python displayresults_test.py 
  748  cd ../../fetch_data_from_git/
  749  ll
  750  cd developeriq-repository-1/
  751  vi Dockerfile 
  752  cd manifest/
  753  vi deployment.yaml 
  754  vi service.yaml 
  755  cd ..
  756  ll
  757  cd productivity_calculate/
  758  ll
  759  vi Dockerfile 
  760  cd manifest/
  761  vi deployment.yaml 
  762  vi service.yaml 
  763  cd ..
  764  vi productivity_calculation.py 
  765  aws eks get-token --cluster-name eksworkshop-eksctl | jq -r '.status.token'
  766  kubectl proxy --port=8080 --address=0.0.0.0 --disable-filter=true &
  767  aws eks get-token --cluster-name eksworkshop-eksctl | jq -r '.status.token'
  768  cd ../..
  769  cd ..
  770  cd cicd/
  771  ll
  772  vi buildspec.yml 
  773  cd course_work/microservices/fetch_data_from_git/
  774  ll
  775  l
  776  ll -a
  777  cd developeriq-repository-1/
  778  ll
  779  ll -a
  780  git remote -v
  781  git status
  782  ll
  783  vi test.py
  784  git status
  785  git commit -m "file created test.py"
  786  git add .
  787  git status
  788  git commit -m "file created test.py"
  789  git status
  790  git push origin master
  791  git status
  792  cd ..
  793  ll
  794  cd productivity_calculate/
  795  ll
  796  git clone ssh://git-codecommit.ap-southeast-1.amazonaws.com/v1/repos/developeriq-repository-2
  797  ll -a
  798  ll
  799  git clone https://git-codecommit.ap-southeast-1.amazonaws.com/v1/repos/developeriq-repository-2
  800  ll -a
  801  cd developeriq-repository-2/
  802  ll -a
  803  ll
  804  cd manifest/
  805  ll
  806  cd ..
  807  ll
  808  git remote -v
  809  git status
  810  git add .
  811  git status
  812  git commit -m "microservice 2 created"
  813  git push origin master
  814  git status
  815  pwd
  816  cd ..
  817  cd fetch_data_from_git/developeriq-repository-1/
  818  ll
  819  vi buildspec.yml 
  820  git status
  821  git add .
  822  git commit -m "build buildspec.ymal file"
  823  git status
  824  git push origin master
  825  git status
  826  vi buildspec.yml 
  827  aws sts get-caller-identity
  828  eksctl create iamidentitymapping --cluster  eksworkshop-eksctl --region=ap-southeast-1 --arn arn:aws:sts::913222011643:assumed-role/codebuild-fetch-data-service-role/AWSCodeBuild-7fc320ba-4ba0-425d-abd7-18ae6b9fa7b3 --group system:masters --username codebuild-fetch-data-service-role
  829  eksctl create iamidentitymapping --cluster eksworkshop-eksctl --region=ap-southeast-1 --arn arn:aws:sts::913222011643:assumed-role/codebuild-fetch-data-service-role/AWSCodeBuild-7fc320ba-4ba0-425d-abd7-18ae6b9fa7b3 --group system:masters --username codebuild-fetch-data-service-role
  830  eksctl get iamidentitymapping --cluster eksworkshop-eksctl --region=ap-southeast-1
  831  eksctl create iamidentitymapping --cluster eksworkshop-eksctl --region=ap-southeast-1 --arn arn:aws:iam::913222011643:role/service-role/codebuild-fetch-data-service-role --group system:masters --username codebuild-fetch-data-service-role
  832  eksctl get iamidentitymapping --cluster eksworkshop-eksctl --region=ap-southeast-1
  833  ll
  834  vi fetch_data_from_git.py 
  835  vi test.py 
  836  git add .
  837  git status
  838  git commit -m "add libraries to test.py"
  839  git push origin master
  840  eksctl create iamidentitymapping --cluster eksworkshop-eksctl --region=ap-southeast-1 --arn arn:aws:sts::913222011643:role/service-role/codebuild-fetch-data-service-role --group system:masters --username codebuild-fetch-data-service-role
  841  eksctl create iamidentitymapping --cluster eksworkshop-eksctl --region=ap-southeast-1 --arn arn:aws:sts::913222011643:role/service-role/codebuild-fetch-data-service-role/AWSCodeBuild-8862f4c3-8f75-444b-8013-6c593b286673 --group system:masters --username codebuild-fetch-data-service-role
  842  eksctl create iamidentitymapping --cluster eksworkshop-eksctl --region=ap-southeast-1 --arn arn:aws:sts::913222011643:role/service-role/codebuild-fetch-data-service-role/ --group system:masters --username codebuild-fetch-data-service-role
  843  vi test.py 
  844  git status
  845  git add .
  846  git status
  847  git commit -m "add libraries to test.py"
  848  git status
  849  git push origin master
  850  kubectl cluster-info
  851  kubectl get svc
  852  vi test.py 
  853  git status
  854  git add .
  855  git status
  856  git commit -m "add libraries to test.py"
  857  git push origin master
  858  cd ~/environment/
  859  ll 0a
  860  ll -a
  861  vi aws-iam-authenticator.txt
  862  kubectl config view --minify
  863  eksctl get iamidentitymapping --cluster eksworkshop-eksctl --region=ap-southeast-1
  864  kubectl get -n kube-system configmap/aws-auth -o yaml
  865  eksctl create iamidentitymapping --cluster eksworkshop-eksctl --region=ap-southeast-1 --arn arn:aws:iam::913222011643:role/service-role/codebuild-fetch-data-service-role --group system:masters --username codebuild-fetch-data-service-role
  866  aws-iam-authenticator help
  867  chmod +x ./aws-iam-authenticator
  868  aws-iam-authenticator help
  869  ll -a
  870  mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$HOME/bin:$PATH
  871  ll -a
  872  echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc
  873  aws-iam-authenticator help
  874  curl -Lo aws-iam-authenticator https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.6.11/aws-iam-authenticator_0.6.11_linux_amd64
  875  ll -a
  876  aws-iam-authenticator help
  877* chmod +x ./aws-iam-authenticatoraws eks --region ap-southeast-1 update-kubeconfig --name eksworkshop-eksctl
  878  aws-iam-authenticator help
  879  mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$HOME/bin:$PATH
  880  aws-iam-authenticator help
  881  echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc
  882* 
  883  eksctl get iamidentitymapping --cluster eksworkshop-eksctl --region=ap-southeast-1
  884  eksctl create iamidentitymapping --cluster eksworkshop-eksctl --region=ap-southeast-1 --arn arn:aws:iam::913222011643:role/service-role/codebuild-fetch-data-service-role --group system:masters --username codebuild-fetch-data-service-role
  885  cd -
  886  ll
  887  vi test.py 
  888  git status
  889  git add .
  890  git status
  891  git commit -m "add libraries to test.py"
  892  git push origin master
  893  ll
  894  vi buildspec.yml 
  895  git status
  896  git add .
  897  git status
  898  git commit -m "apply changes in buildspec.yml"
  899  git push origin master
  900  aws configure list
  901  cat $HOME/.kube/config
  902  aws eks --region ap-southeast-1 update-kubeconfig --name eksworkshop-eksctl
  903  vi test.py 
  904  git add .
  905  git status
  906  git commit -m "apply changes in test.py"
  907  git push origin master
  908  kubectl cluster-info
  909  kubectl get nodes
  910  kubectl get svc
  911  kubectl get -n kube-system configmap/aws-auth -o yaml | awk "/mapRoles: \|/{print;print \"$ROLE\";next}1"
  912  ROLE="    - rolearn: arn:aws:iam::${ACCOUNT_ID}:role/codebuild-fetch-data-service-role\n      username: build\n      groups:\n        - system:masters"
  913  kubectl get -n kube-system configmap/aws-auth -o yaml | awk "/mapRoles: \|/{print;print \"$ROLE\";next}1" > /tmp/aws-auth-patch.yml
  914  kubectl patch configmap/aws-auth -n kube-system --patch "$(cat /tmp/aws-auth-patch.yml)"
  915  aws eks --region ap-southeast-1 update-kubeconfig --name eksworkshop-eksctl
  916  vi test.py 
  917  git add .
  918  git commit -m "apply changes in test.py"
  919  git push origin master
  920  history
  921  cd ..
  922  history > history.txt
